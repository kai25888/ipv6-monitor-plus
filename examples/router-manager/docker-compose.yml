version: '3.8'

services:
  router-manager:
    build: 
      context: .
      dockerfile: Dockerfile
      platform: linux/amd64
    image: router-manager:latest
    container_name: router-manager
    ports:
      - "3003:3003"
    environment:
      # 路由器配置
      - ROUTER_IP=${ROUTER_IP:-192.168.1.1}
      - ROUTER_USERNAME=${ROUTER_USERNAME:-admin}
      - ROUTER_PASSWORD=${ROUTER_PASSWORD}
      - ROUTER_KEY=${ROUTER_KEY:-}
      - ROUTER_TYPE=${ROUTER_TYPE:-xiaomi}
      
      # 服务配置
      - PORT=3003
      - TIMEOUT=${TIMEOUT:-30000}
      
      # Web 认证配置
      - WEB_USERNAME=${WEB_USERNAME:-admin}
      - WEB_PASSWORD=${WEB_PASSWORD:-admin123}
      
      # 安全配置
      - SESSION_SECRET=${SESSION_SECRET:-router-manager-secret}
      - RATE_LIMIT_MAX=${RATE_LIMIT_MAX:-100}
      
      # 日志配置
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_TO_FILE=true
      
      # Node.js 配置
      - NODE_ENV=production
      - TZ=Asia/Shanghai
    
    volumes:
      # 日志持久化
      - router-logs:/app/logs
      # 临时文件
      - router-temp:/app/temp
      # 可选：自定义配置
      - ./config/.env:/app/.env:ro
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    
    # 网络配置（确保可以访问路由器）
    network_mode: "host"
    
    # 资源限制
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.1'
    
    # 安全设置
    security_opt:
      - no-new-privileges:true
    
    # 共享内存设置（Chromium 需要）
    shm_size: 512mb
    
    # 依赖检查
    depends_on:
      - chromium-base-check
    
    labels:
      - "service=router-manager"
      - "version=1.0"
      - "description=Router management and automation service"

  # 基础镜像依赖检查服务
  chromium-base-check:
    image: chromium-base:latest
    container_name: router-chromium-base-check
    command: ["chromium-headless", "--version"]
    restart: "no"
    profiles:
      - check

volumes:
  router-logs:
    driver: local
    labels:
      - "service=router-manager"
      - "type=logs"
  
  router-temp:
    driver: local
    labels:
      - "service=router-manager"
      - "type=temp"

networks:
  default:
    name: router-manager-network